services:
  nginx:
    restart: always
    build:
      context: ./
      dockerfile: dev/nginx/Dockerfile.local
    links:
      - py-conductor
      - go-performer
    volumes:
      - ./sites/dothething/placeholder:/usr/share/nginx/html
    depends_on:
      py-conductor:
        condition: service_started
    ports:
      - "8080:8080"
      - "8083:443"
      - "443:443"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  py-conductor:
    build:
      context: ./services/py-conductor
      dockerfile: Dockerfile.local
    volumes:
      - ./services/py-conductor:/app
    links:
      - redis
      - nats
      - mongodb
    ports:
      - "8081:8080"
    env_file:
      - ./services/py-conductor/.env.local
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  go-performer:
    build:
      context: ./services/go-performer
      dockerfile: Dockerfile.local
    volumes:
      - ./services/go-performer:/go/src/app
    links:
      - redis
      - nats
      - mongodb
    ports:
      - "8082:8080"
    env_file:
      - ./services/go-performer/.env.local
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  mongodb:
    # MongoDB setup in this script will reset the data if restarted
    # Volumes can be used to persist the data if we want
    restart: always
    image: mongo:latest
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      # Since this is just local mongo w/in the Compose network, exposing creds like this is no biggie
      MONGO_INITDB_ROOT_USERNAME: demo
      MONGO_INITDB_ROOT_PASSWORD: demo
      MONGO_INITDB_DATABASE: demo
    volumes:
      - ./dev/migrations/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
      # If an error occurs when spinning up MongoDB, volume needs to be manually created with:
      # docker volume create --name=demo_mongodata
      - mongodb-data:/data/db
  nats:
    restart: always
    image: nats:latest
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  redis:
    restart: always
    image: redis:latest
    ports:
      - "6379"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
volumes:
  mongodb-data:

#volumes:
#  py-conductor:
